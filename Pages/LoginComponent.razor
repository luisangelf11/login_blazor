@page "/login"
@using Login.Authentication
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager
@inject IJSRuntime JavaScript

<form class="form mx-auto mt-3">
    <h3 class="text-center">LOGIN</h3>
    <div class="form-group">
        <label>Username:</label>
        <input type="text" @bind="Email" name="username" class="form-control col-sm-6 col-md-4" />
    </div>
    <div class="form-group mt-2">
        <label>Password:</label>
        <input type="password" @bind="Password" name="password" class="form-control col-sm-6 col-md-4" />
    </div>
    <button type="button" class="btn btn-primary mt-2" @onclick="Login">Log in</button>
</form>
@code {
    private string Email { get; set; } = "";
    private string Password { get; set; } = "";
    async Task Login()
    {
        var r = await usuarioServices.Autenticar(Email, Password);
        if (r != null)
        {
            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                Username = r.Email,
                Role = r.Rol
            });
            //await JavaScript.InvokeVoidAsync("alert", "Credenciales correctas!");
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            await JavaScript.InvokeVoidAsync("alert", "Credenciales incorrectas!");
        }
    }
    }